services:
  app:
      build: 
        context: ..
        dockerfile: Dockerfile
      container_name: go-server
      profiles: ["light", "full"]
      depends_on:
        postgresql:
          condition: service_healthy
        authentik:
          condition: service_healthy
      environment:
        - DB_HOST=postgresql
        - DB_USER=user
        - DB_PASSWORD=password
        - DB_NAME=myservice_db
        - DB_PORT=5432
      ports:
        - "50051:50051"
      healthcheck:
        test: ["CMD", "wget", "-qO-", "http://localhost:8080/health"]
        interval: 30s
        timeout: 3s
        retries: 3
        start_period: 5s

  postgresql:
    image: postgis/postgis:17-master
    container_name: postgresql
    profiles: ["light", "full"]
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: myservice_db
      # Required for Supabase Studio
      POSTGRES_PORT: 5432
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d myservice_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d

  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis_data:/data

  studio:
    image: supabase/studio:latest
    container_name: supabase-studio
    profiles: ["full"]
    depends_on:
      postgresql:
        condition: service_healthy
    environment:
      STUDIO_PG_META_URL: http://meta:8080
      POSTGRES_PASSWORD: password
      DEFAULT_ORGANIZATION: Default Organization
      DEFAULT_PROJECT: Default Project
      SUPABASE_URL: http://kong:8000
      SUPABASE_PUBLIC_URL: http://localhost:8000
      SUPABASE_ANON_KEY: your-anon-key
      SUPABASE_SERVICE_KEY: your-service-key
    ports:
      - "3000:3000"

  meta:
    image: supabase/postgres-meta:v0.85.0
    container_name: supabase-meta
    profiles: ["full"]
    depends_on:
      postgresql:
        condition: service_healthy
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: postgresql
      PG_META_DB_PASSWORD: password
      PG_META_DB_PORT: 5432
      PG_META_DB_USER: user
      PG_META_DB_NAME: myservice_db
    ports:
      - "8080:8080"
      
volumes:
  postgres_data:
  redis_data: